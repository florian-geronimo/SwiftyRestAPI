//
//  RequestrAPIGenerator.swift
//  SwiftyRestAPIPackageDescription
//
//  Created by Daniel Lozano ValdÃ©s on 9/29/17.
//

import Foundation

final class RequestrAPIGenerator: APIGenerator {

    let api: API

    // MARK: - API Generator

    init(api: API) {
        self.api = api
    }

    func makeEndpointsFile() -> FileText {
        let basePath = api.basePath
        let allEndpoints = api.categories.flatMap { $0.endpoints }

        return """
        \(makeHeader())

        enum Endpoint {

        \(makeBaseURL(with: basePath))

        \(makeEnumCases(for: allEndpoints))

        \(makeFullPathComputedProperty(for: allEndpoints))

        }

        """
    }

    func makeServiceFiles() -> [FileText] {
        var text = ""
        text += ""
        text += ""
        return [text]
    }

    // MARK: - Endpoint's File Helper's

    private func makeHeader() -> String {
        return  """
        //
        // Autogenerated by SwifyRestAPI
        // Created with love by Icalia Labs
        //
        """
    }

    private func makeBaseURL(with baseURL: String) -> String {
        return """
            static let baseURL = "\(baseURL)"
        """
    }

    private func makeEnumCases(for endpoints: [API.Endpoint]) -> String {
        var string = ""
        for endpoint in endpoints {
            string += """
                case \(endpoint.name)

            """
        }
        return String(string.dropLast()) // Remove last \n
    }

    private func makeFullPathComputedProperty(for endpoints: [API.Endpoint]) -> String {
        var string = ""
        string += """
            var fullPath: String {
                let path: String
                switch self {

        """
        for endpoint in endpoints {
            string += """
                    case .\(endpoint.name):
                        path = "\(endpoint.relativePath)"

        """
        }
        string += """
                }
                return Endpoint.baseURL + path
            }
        """
        return string
    }

    // MARK: - Service Files Helper's

}

// Output should look like this:
//enum Endpoint {
//
//    static let baseURL = ""
//
//    case places
//    case search
//    case quotes
//
//    var fullPath: String {
//        let path: String
//        switch self {
//        case .places:
//            path = "/v2/places"
//        case .search:
//            path = "/v2/search"
//        case .quotes:
//            path = "/v2/quotes"
//        }
//        return Endpoint.baseURL + path
//    }
//
//}
